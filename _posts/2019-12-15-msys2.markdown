---
layout: post
title:  " msys2"
subtitle: "или windows здорового человека"
postpreview: "Привет, дорогой читатель! В этой статье мы разберемся как поставить pacman, tmux, zsh, vim/emacs, openssh и прочие полезные штуки на ... Винду.  А почему бы и нет! Gричем всё это без WSL, регистрации и смс."
date:   2019-12-15 23:16:03 +0300
pic: "/assets/img/home.jpg"
categories: unixp
permalink: /:categories/:year/:month/:day/:title.html
---
   
Привет, дорогой читатель! В этой статье мы разберемся как поставить pacman, tmux, zsh, vim/emacs, openssh и прочие полезные штуки на ... Винду. А почему бы и нет, причем всё это без WSL, регистрации и смс.

А дело было так. Не так давно я впервые устанавливал Ruby на Windows 10 и случайно увидел это:

<img src="https://asv-solo.github.io/assets/img/scr001.jpg" class="post-image" alt="photo">

Что это за тёмная магия и откуда здесь пакетный менеджер арчлинукса?
Оказывается установщик Ruby Developer Kit (ridk) устанавливает такой компонент msys2, который представляет из себя надстройку позволяющую выполнять команды и устанавливать программы и библиотеки из GNU/Linux окружения. Звучит неплохо, да? 
К своему сожалению, я раньше обошел стороной этот проект, как и схожий ему Cygwin (разберём его в следущий раз) ставя в качестве эмулятора терминала conemu (cmder) или git bash, и только сейчас в моё поле зрения попал сей полезный инструмент. 											
Конечно, если у вас подходящая версия 10-ки, можно просто использовать WSL, и установить дистрибутив из списка майкрософт в качестве подсистемы,  но это не всегда нужно, особенно если винда не является вашей рабочей системой или вам просто нужен хороший терминал, либо отдельный инструментарий unix вроде OpenSSH, rsync, Emacs/vim etc. Либо вы просто не хотите тратить ресурсы компьютера, а плюшки из мира *nix ох как нужны! 
В этом случае, msys2 как раз то, что надо.

	Для начала работы устанавливаем собственно сам msys2:
	
скачиваем с официального сайта https://www.msys2.org/ установщик и следуем инструкциям;

далее (необязательно) слудует открыть C:\msys64\msys2_shell.cmd, и раскомментировать там строки (удалив префикс **rem**):

```bash
rem set MSYS=winsymlinks:nativestrict
```
Позволит создавать символьные ссылки, например на домашний каталог:

```bash
$ ln -s /c/Users/user/ ~/
```
(это полезно для быстрого доступа к дерикториям Windows. Для этого после раскоментирования,  запускаем этот же командный файл с правами администратора. )

Также не лишним будет раскоментировать:

```bash
rem set MSYS2_PATH_TYPE=inherit
```
для экспорта текущей переменной среды PATH в msys2; 

В общем-то всё. Можно ставить софт. Соль и перец по вкусу.

```bash
pacman -S man vim git zsh tmux
pacman -S openssh rsync make

```

Ламповый pacman на винде. Что может ещё так согреть душу линуксоида??

<img src="https://asv-solo.github.io/assets/img/update.png" class="post-image" alt="photo">
<!-- ![](https://asv-solo.github.io/assets/img/update.png) -->

Также установим фреймворк для нашего шела, я предпочитаю oh-my-zsh (красоты ради, предварительно установим powerline шрифты )

```bash
git clone https://github.com/powerline/fonts.git --depth=1
cd fonts
./install.sh
cd ..
rm -rf fonts

```
В отсутсвии chsh, чтобы установить zsh оболочкой по умолчанию придется отредактировать всё то же msys2_shell.cmd

```bash
set "LOGINSHELL=zsh"
```
Отредактируем ~/.zshrc и поставим какую-нибудь тему: 

```bash
ZSH_THEME="agnoster"
```
Перезагрузим сессию и запустим терминал. Вуаля! 

<!-- ![](https://asv-solo.github.io/assets/img/scr002.png) -->
<img src="https://asv-solo.github.io/assets/img/scr002.png" class="post-image" alt="photo">

Немного пошаманив с конфигами, можно получить что-то вроде:

<!-- ![](https://asv-solo.github.io/assets/img/scr002.png) -->
<img src="https://asv-solo.github.io/assets/img/scr003.png" class="post-image" alt="photo">

Ну как-то так. 
